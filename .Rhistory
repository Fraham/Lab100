sample( SampleSpace, size=5, replace=TRUE, prob=ProbSet )
sample( SampleSpace, size=5, replace=TRUE, prob=ProbSet )
SampleSpace <- rep(c("R","B"),c(6,4))
ProbSet <- rep(1/10, 10)
sample(SampleSpace, size=4, replace=FALSE, prob=ProbSet)
set.seed(245)
allred <- 0
threered <- 0
N <- 1000
for (i in 1:N)
{
balls <- sample(SampleSpace, size=4, replace=FALSE, prob=ProbSet)
if(sum(balls=="R")==4) allred <- allred + 1
if(sum(balls=="R")==3) threered <- threered + 1
}
p4 <- allred/N
p3 <- threered/N
set.seed(245)
allred <- 0
threered <- 0
N <- 1000
for (i in 1:N)
{
balls <- sample(SampleSpace, size=4, replace=FALSE, prob=ProbSet)
if(sum(balls=="R")==4) allred <- allred + 1
if(sum(balls=="R")==3) threered <- threered + 1
}
p4 <- allred/N
p3 <- threered/N
#Question 1
set.seed(565)
set.seed(565)
N <- 200
number5 <- 0
SampleSpace <- 1:6
ProbSet <- rep( 1/6, times=6 )
for(i in 1:N)
{
outcome <- sample(SampleSpace, size = 1, replace=TRUE, prob=Probset)
if(outcome == 5) number5 <- number5 + 1
}
number5
set.seed(565)
N <- 200
number5 <- 0
SampleSpace <- 1:6
ProbSet <- rep( 1/6, times=6 )
for(i in 1:N)
{
outcome <- sample(SampleSpace, size = 1, replace=TRUE, prob=ProbSet)
if(outcome == 5) number5 <- number5 + 1
}
number5
set.seed(565)
N <- 199
number5 <- 0
SampleSpace <- 1:6
ProbSet <- rep( 1/6, times=6 )
for(i in 1:N)
{
outcome <- sample(SampleSpace, size = 1, replace=TRUE, prob=ProbSet)
if(outcome == 5) number5 <- number5 + 1
}
number5
set.seed(565)
N <- 200
number5 <- 0
SampleSpace <- 1:6
ProbSet <- rep( 1/6, times=6 )
for(i in 1:N)
{
outcome <- sample(SampleSpace, size = 1, replace=TRUE, prob=ProbSet)
if(outcome == 5) number5 <- number5 + 1
}
number5
outcome <- sample(SampleSpace, size = 200, replace=TRUE, prob=ProbSet)
sum(outcome == 5)
set.seed(565)
SampleSpace <- 1:6
ProbSet <- rep( 1/6, times=6 )
outcome <- sample(SampleSpace, size = 200, replace=TRUE, prob=ProbSet)
sum(outcome == 5)
sample(1:49, 6, replace=FALSE, prob=rep(1/49,49))
m <- 5
((6*5*4*3) + (6*5*4*4*m))/((m+6)*(m+5)*(m+4)*(m+3))
m <- 10
((6*5*4*3) + (6*5*4*4*m))/((m+6)*(m+5)*(m+4)*(m+3))
m <- 20
((6*5*4*3) + (6*5*4*4*m))/((m+6)*(m+5)*(m+4)*(m+3))
m <- 15
((6*5*4*3) + (6*5*4*4*m))/((m+6)*(m+5)*(m+4)*(m+3))
m <- 14
((6*5*4*3) + (6*5*4*4*m))/((m+6)*(m+5)*(m+4)*(m+3))
m <- 16
((6*5*4*3) + (6*5*4*4*m))/((m+6)*(m+5)*(m+4)*(m+3))
1/choose(90, 50)
1/choose(90, 40)
1/choose(90, 80)
1/choose(90, 89)
for(N in 1:99)
{
for(n in 1:99)
{
1/choose(N,n)
}
}
for(N in 1:99)
{
for(n in 1:99)
{
c <- c(c, 1/choose(N,n))
}
}
c
which.min(abs(c - 14))
which.min(abs(c - 0.5))
for(N in 1:99)
{
for(n in 1:99)
{
c <- c(c, 1/choose(N,n))
}
}
which.min(abs(c - 0.5))
which.min(abs(c - 0.5))
for(N in 1:99)
{
for(n in 1:99)
{
c <- c(c, 1/choose(N,n))
}
}
which.min(abs(c - 0.5))
c <- 0
for(N in 1:99)
{
for(n in 1:99)
{
c <- c(c, 1/choose(N,n))
}
}
which.min(abs(c - 0.5))
choose(2,99)
choose(2,1)
1/choose(2,1)
c <- 0
for(N in 1:99)
{
for(n in 1:99)
{
c <- c(c, 1000000/choose(N,n))
}
}
which.min(abs(c - 0.5))
8321/99
84*99
8321-8316
1000000/choose(84,5)
1000000/choose(84,4)
1000000/choose(84,3)
1000000/choose(84,4)
c
k
1000000/choose(83,4)
1000000/choose(82,4)
1000000/choose(84,4)
1000000/choose(85,4)
abs(0.5 - 0.4938796)
abs(0.5 - 0.5182687)
m <- array(0, dim=c(99,99))
m <- array(0, dim=c(99,99))
for(N in 1:99)
{
for(n in 1:99)
{
#c <- c(c, 1000000/choose(N,n))
m[N,n] <- 1000000/choose(N,n)
}
}
which.min(abs(m - 0.5))
m
which(abs(m-0.5)==min(m-0.5)))
which(abs(m-0.5)==min(m-0.5))
which.min(abs(m - 0.5))
382/99
sapply(m,function(x)which.min(abs(x - 0.5)))
8321/99
SampleSpace <- 1:6
ProbSet <- rep( 1/6, times=6 )
SampleSize <- 1000
Trials <- rep( 0, SampleSize )
for( i in 1:SampleSize )
{
Rolls <- sample( SampleSpace, size=2, replace=TRUE, ProbSet)
Trials[i] <- sum( Rolls )
}
barplot( table( Trials ), main="Total Number on Two Dice")
var( Trials )
SampleSpace <- 1:6
ProbSet <- rep( 1/6, times=6 )
SampleSize <- 100000
Trials <- rep( 0, SampleSize )
for( i in 1:SampleSize )
{
Rolls <- sample( SampleSpace, size=2, replace=TRUE, ProbSet)
Trials[i] <- sum( Rolls )
}
barplot( table( Trials ), main="Total Number on Two Dice")
var( Trials )
f <- function(x) x^2 * (1 - x)^3
set.seed(103)
I <- MC.integrate(f,a=0,b=1,k=1,N=100)
MC.integrate <- function(f,a,b,k,N)
{
simx <- runif(N,a,b)
simy <- runif(N,0,k)
p <- sum(f(simx) > simy)/N
return(p * k * (b-a))
}
f <- function(x) x^2 * (1 - x)^3
set.seed(103)
I <- MC.integrate(f,a=0,b=1,k=1,N=100)
I
f <- function(x) x^2 * (1 - x)^3
set.seed(134)
I <- MC.integrate(f,a=0,b=1,k=1,N=100)
I
f <- function(x) x^2 * (1 - x)^3
set.seed(134)
I <- MC.integrate(f,a=0,b=1,k=exp(-1),N=100)
I
f <- function(x) x^2 * (1 - x)^3
set.seed(134)
I <- MC.integrate(f,a=0,b=1,k=exp(-1),N=10000)
I
f <- function(x) (1-x)/(1+x)
set.seed(134)
I <- MC.integrate(f,a=0,b=1,k=1,N=100000)
I
f <- function(x) (1-x)/(1+x)
set.seed(134)
IN <- MC.integrate(f,a=0,b=1,k=1,N=100000)
I <- 0.3862943611199
IN
log(IN - I)
f <- function(x) (1-x)/(1+x)
set.seed(134)
IN <- MC.integrate(f,a=0,b=1,k=1,N=100000)
I <- 0.3862943611199
IN
log(abs(IN - I)
f <- function(x) (1-x)/(1+x)
set.seed(134)
IN <- MC.integrate(f,a=0,b=1,k=1,N=100000)
I <- 0.3862943611199
IN
log(abs(IN - I)
log(abs(IN - I)
log(abs(IN - I)
log10(abs(IN - I)
log10(abs(IN - I))
f <- function(x) (1-x)/(1+x)
set.seed(134)
N <- 100000
IN <- MC.integrate(f,a=0,b=1,k=1,N)
I <- 0.3862943611199
IN
log10(abs(IN - I))
log10(IN - I)
(
log10(abs(IN - I))
log10(abs(IN - I))
log()
log10(abs(IN - I))
-2*log(N)
-0.5*log(N)
log(N)
-log(N)
f <- function(x) (1-x)/(1+x)
set.seed(134)
N <- 100000
IN <- MC.integrate(f,a=0,b=1,k=1,N)
I <- 0.3862943611199
IN
log10(abs(IN - I))
-2*log(N)
-0.5*log(N)
log(N)
-log(N)
(log10(abs(IN - I))) + (-2*log(N))
(log10(abs(IN - I))) + (-0.5*log(N))
(log10(abs(IN - I))) + (log(N))
(log10(abs(IN - I))) + (-1*log(N))
f <- function(x) (1-x)/(1+x)
set.seed(134)
N <- 10000
IN <- MC.integrate(f,a=0,b=1,k=1,N)
I <- 0.3862943611199
IN
log10(abs(IN - I))
-2*log(N)
-0.5*log(N)
log(N)
-log(N)
(log10(abs(IN - I))) + (-2*log(N))
(log10(abs(IN - I))) + (-0.5*log(N))
(log10(abs(IN - I))) + (log(N))
(log10(abs(IN - I))) + (-1*log(N))
f <- function(x) (1-x)/(1+x)
set.seed(134)
N <- 1000
IN <- MC.integrate(f,a=0,b=1,k=1,N)
I <- 0.3862943611199
IN
log10(abs(IN - I))
-2*log(N)
-0.5*log(N)
log(N)
-log(N)
(log10(abs(IN - I))) + (-2*log(N))
(log10(abs(IN - I))) + (-0.5*log(N))
(log10(abs(IN - I))) + (log(N))
(log10(abs(IN - I))) + (-1*log(N))
f <- function(x) (1-x)/(1+x)
set.seed(134)
N <- 1000
IN <- MC.integrate(f,a=0,b=1,k=1,N)
I <- 0.3862943611199
IN
log10(abs(IN - I))
-2*log(N)
-0.5*log(N)
log(N)
-log(N)
(log10(abs(IN - I))) - (-2*log(N))
(log10(abs(IN - I))) - (-0.5*log(N))
(log10(abs(IN - I))) - (log(N))
(log10(abs(IN - I))) - (-1*log(N))
f <- function(x) (1-x)/(1+x)
set.seed(134)
N <- 100
IN <- MC.integrate(f,a=0,b=1,k=1,N)
I <- 0.3862943611199
IN
log10(abs(IN - I))
-2*log(N)
-0.5*log(N)
log(N)
-log(N)
(log10(abs(IN - I))) - (-2*log(N))
(log10(abs(IN - I))) - (-0.5*log(N))
(log10(abs(IN - I))) - (log(N))
(log10(abs(IN - I))) - (-1*log(N))
f <- function(x) (1-x)/(1+x)
set.seed(134)
N <- 10000000
IN <- MC.integrate(f,a=0,b=1,k=1,N)
I <- 0.3862943611199
IN
log10(abs(IN - I))
-2*log(N)
-0.5*log(N)
log(N)
-log(N)
(log10(abs(IN - I))) - (-2*log(N))
(log10(abs(IN - I))) - (-0.5*log(N))
(log10(abs(IN - I))) - (log(N))
(log10(abs(IN - I))) - (-1*log(N))
dbinom( x=0, size=3, prob=0.5) + dbinom( x=1, size=3, prob=0.5)
sum( dbinom( x=0:1, size=3, prob=0.5) )
dbinom( x=0, size=3, prob=0.5) + dbinom( x=1, size=3, prob=0.5)
sum( dbinom( x=0:1, size=3, prob=0.5) )
set.seed(103)
bn.sim <- sum(sample(0:1,20,replace=TRUE,prob=c(0.3,0.7)))
set.seed(103)
bn.sim2 <- rbinom(1,20,0.7)
sum(sample(0:1,20,replace=TRUE,prob=c(0.3,0.7)))
set.seed(103)
rbinom(1,20,0.7)
#------------------------------------------------------------------
set.seed(123)
PoissonPMF <- dpois( x=0:100, lambda=0.5)
PoissonPMF
set.seed(123)
PoissonPMF <- dpois( x=0:100, lambda=0.5)
PoissonPMF
set.seed(123)
PoissonPMF <- rpois( x=0:100, lambda=0.5)
PoissonPMF
sum(PoissonPMF)
PoissonPMF <- rpois( x=100, lambda=0.5)
PoissonPMF <- rpois( n=100, lambda=0.5)
sum(PoissonPMF)
pbinom( q=10, size=15, prob=0.4)
pbinom( q=10, size=15, prob=0.4) - pbinom( q=3, size=15, prob=0.4)
c <- c(0)
for (i in 0:8)
{
for(j in 0:8)
{
if (i * j == 8)
{
c <- (c, dpois(i,3)*dbinom(j,10,0.2))
}
}
}
sum(c)
c <- c(0)
for (i in 0:8)
{
for(j in 0:8)
{
if (i * j == 8)
{
c <- c(c, dpois(i,3) * dbinom(j,10,0.2))
}
}
}
sum(c)
sum(dpois(0:5,4)*dbinom(5:0,6,0.3)
sum(dpois(0:5,4)*dbinom(5:0,6,0.3)
set.seed(103)
sum(sample(0:1,20,replace=TRUE,prob=c(0.3,0.7)))
set.seed(103)
rbinom(1,20,0.7)
sum(dpois(0:5,4)*dbinom(5:0,6,0.3)
set.seed(103)
sum(sample(0:1,20,replace=TRUE,prob=c(0.3,0.7)))
set.seed(103)
rbinom(1,20,0.7)
sum(dpois(0:5,4)*dbinom(5:0,6,0.3)
sum(dpois(0:5,4)*dbinom(5:0,6,0.3)
prob <- sum(dpois(0:5,4)*dbinom(5:0,6,0.3)
#------------------------------------------------------------------
#Question 1
set.seed(123)
sum(dpois(0:5,4)*dbinom(5:0,6,0.3))
d <- c(0)
for (i in 0:19)
{
for(j in 0:19)
{
if (i + j == 2)
{
d <- c(d, dbinom(i,20,0.4) * dbinom(j,20,0.7))
}
}
}
sum(d)
d <- c(0)
for (i in 0:19)
{
for(j in 0:19)
{
if (i + j == 2 || i + j == 3 || i + j == 5 || i + j == 7 || i + j == 11 || i + j == 13 || i + j == 17 || i + j == 19)
{
d <- c(d, dbinom(i,20,0.4) * dbinom(j,20,0.7))
}
}
}
sum(d)
x <- 5
ppois( q=4, lambda=x)
x <- 6
ppois( q=4, lambda=x)
x <- 4
ppois( q=4, lambda=x)
x <- 4.5
ppois( q=4, lambda=x)
x <- 4.75
ppois( q=4, lambda=x)
x <- 4.6
x <- 4.7
ppois( q=4, lambda=x)
x <- 4.8
ppois( q=4, lambda=x)
x <- 4.69
ppois( q=4, lambda=x)
x <- 4.68
ppois( q=4, lambda=x)
x <- 4.67
ppois( q=4, lambda=x)
abs(0.5 - 0.4983128)
abs(0.5 - 0.5001688)
x <- 4.66
ppois( q=4, lambda=x)
x <- 4.675
ppois( q=4, lambda=x)
x <- 4.676
ppois( q=4, lambda=x)
x <- 4.672
ppois( q=4, lambda=x)
x <- 4.673
ppois( q=4, lambda=x)
x <- 4.674
ppois( q=4, lambda=x)
x <- 4.675
ppois( q=4, lambda=x)
x <- 4.67
ppois( q=4, lambda=x)
x <- 4.671
ppois( q=4, lambda=x)
x <- 4.669
ppois( q=4, lambda=x)
x <- 4.667
ppois( q=4, lambda=x)
x <- 4.665
ppois( q=4, lambda=x)
x <- 4.66
ppois( q=4, lambda=x)
x <- 4.67
ppois( q=4, lambda=x)
